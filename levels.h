#ifndef _LEVELS_H
#define _LEVELS_H

#ifndef ARDUINO
#define PROGMEM 
#endif
const unsigned long PROGMEM LevelTimes[LEVELS][3] = {
  {12950UL,17400UL,25000UL},
  {11980UL,16020UL,24000UL},
  {16520UL,20500UL,29000UL},
  {27120UL,32500UL,41000UL},
  {17650UL,24500UL,33000UL},
  {29470UL,35500UL,44000UL},
  {10150UL,15300UL,25000UL},
  {24680UL,28900UL,37000UL},
  {19120UL,24000UL,32000UL},
  {25320UL,29500UL,38000UL},
};

const unsigned char PROGMEM Level1[] = {
21,5,16,12,21,21,21,21,21,21,
21,27,15,6,12,21,21,21,21,21,
21,1,21,15,6,12,21,21,21,21,
21,1,21,21,15,6,12,21,21,21,
21,27,21,21,21,15,6,12,21,21,
20,1,20,20,20,20,15,6,12,20,
20,1,20,20,20,20,20,15,11,20,
20,27,20,20,20,20,20,13,19,20,
20,4,0,24,0,0,26,8,14,20,
20,20,20,20,20,20,20,20,20,20,
};

const unsigned char PROGMEM Level2[] = {
21,21,21,21,20,21,21,21,21,21,
21,13,10,0,24,0,0,16,12,21,
20,17,14,13,7,6,12,15,11,20,
21,1,13,7,14,15,6,12,1,21,
21,1,7,14,23,22,15,6,1,21,
20,27,20,23,22,23,22,20,27,20,
21,1,23,22,23,22,23,22,1,21,
21,9,12,20,22,23,20,13,19,21,
21,15,18,26,0,0,26,8,14,21,
21,21,21,20,21,21,20,21,21,21,
};

const unsigned char PROGMEM Level3[] = {
22,22,22,22,22,22,22,22,22,22,
5,26,0,0,0,0,0,26,2,23,
4,26,0,0,2,22,22,13,19,22,
23,23,23,23,1,23,23,17,14,23,
22,22,22,22,27,22,22,9,12,22,
23,23,23,23,1,23,23,15,11,23,
22,5,0,0,3,22,22,22,25,22,
23,1,23,15,6,12,23,13,19,23,
22,4,0,0,0,26,0,8,14,22,
23,23,23,23,23,23,23,23,23,23,
};

const unsigned char PROGMEM Level4[] = {
22,22,13,10,26,0,0,0,26,2,
22,13,7,14,22,22,22,22,22,1,
13,7,14,22,22,5,2,22,22,27,
17,14,22,22,22,4,3,22,5,3,
27,22,22,22,22,22,22,5,3,22,
1,5,26,0,0,0,26,3,22,22,
1,4,0,24,0,0,0,26,2,22,
27,22,22,22,22,22,22,22,1,22,
9,12,22,22,22,22,22,22,1,22,
15,18,26,0,0,0,0,26,3,22,
};

const unsigned char PROGMEM Level5[] = {
5,26,0,0,0,0,0,0,26,2,
4,0,2,23,23,21,23,23,21,1,
20,20,1,23,23,21,23,21,23,25,
20,20,1,12,23,21,21,23,23,1,
20,20,27,6,12,21,23,21,23,1,
20,20,1,15,6,21,23,23,21,1,
20,20,1,23,15,6,12,23,23,1,
20,20,1,23,23,15,6,12,23,1,
5,0,3,23,23,23,15,6,12,27,
4,0,0,0,0,0,0,0,0,3,
};

const unsigned char PROGMEM Level6[] = {
22,22,22,22,22,22,22,22,22,22,
5,26,0,0,0,0,0,26,2,22,
1,23,23,23,23,23,23,23,1,22,
1,23,23,5,0,2,5,26,3,22,
27,23,23,25,21,1,4,0,0,2,
9,12,23,1,21,1,20,20,20,1,
15,6,12,1,21,1,20,20,20,1,
22,15,11,1,21,1,20,20,20,1,
22,22,27,27,21,1,20,20,20,27,
22,22,9,19,21,4,26,0,0,3,
};

const unsigned char PROGMEM Level7[] = {
5,0,0,0,0,0,2,23,23,23,
25,21,22,22,22,21,27,23,23,23,
1,21,21,22,22,21,9,10,0,2,
1,21,22,21,22,21,15,18,2,1,
1,21,22,22,21,21,22,13,19,1,
1,22,22,22,22,13,10,8,14,1,
1,22,22,22,13,7,18,0,0,3,
1,22,22,13,7,14,23,23,23,23,
9,12,13,7,14,23,23,23,23,23,
15,18,8,14,23,23,23,23,23,23,
};

const unsigned char PROGMEM Level8[] = {
13,10,24,16,12,23,23,23,23,23,
15,11,23,15,6,12,23,23,23,23,
13,19,23,23,15,6,12,23,23,23,
17,14,22,23,23,15,6,12,23,23,
9,12,5,0,16,12,15,6,12,23,
15,11,9,12,15,6,12,15,6,12,
23,27,15,6,12,15,6,12,15,11,
23,1,23,15,11,23,15,11,23,1,
23,1,23,23,27,20,20,27,23,27,
23,4,26,0,3,23,23,4,0,3,
};

const unsigned char PROGMEM Level9[] = {
13,10,16,12,22,22,22,22,22,22,
17,18,8,11,22,22,5,26,2,22,
1,22,22,9,12,13,19,22,9,12,
27,22,22,15,18,8,14,22,15,11,
9,12,22,22,20,20,20,20,20,27,
17,18,0,2,20,22,22,22,22,1,
1,22,22,1,20,20,20,22,22,1,
1,22,22,1,20,22,22,22,22,1,
1,22,5,3,20,20,20,20,20,1,
4,0,4,0,24,0,0,0,26,3,
};

const unsigned char PROGMEM Level10[] = {
22,13,10,26,0,2,20,5,2,22,
13,7,14,22,22,27,20,27,4,2,
17,14,22,22,22,1,20,1,22,27,
25,22,22,5,0,3,20,1,22,1,
1,22,22,9,10,0,26,3,22,1,
1,22,22,17,18,16,12,22,22,1,
1,22,22,1,21,15,6,12,22,1,
1,22,13,19,21,20,15,6,12,27,
27,13,7,14,21,20,21,15,6,19,
4,8,14,20,21,20,21,20,15,14,
};

static uint8_t getLevelTile(uint8_t level, uint8_t x, uint8_t y) {
  int pos = x + y * 10;

  #ifdef ARDUINO
  switch (level) {
    case 1:
      return pgm_read_byte_near(Level1 + pos);
      break;
    case 2:
      return pgm_read_byte_near(Level2 + pos);
      break;
    case 3:
      return pgm_read_byte_near(Level3 + pos);
      break;
    case 4:
      return pgm_read_byte_near(Level4 + pos);
      break;
    case 5:
      return pgm_read_byte_near(Level5 + pos);
      break;
    case 6:
      return pgm_read_byte_near(Level6 + pos);
      break;
    case 7:
      return pgm_read_byte_near(Level7 + pos);
      break;
    case 8:
      return pgm_read_byte_near(Level8 + pos);
      break;
    case 9:
      return pgm_read_byte_near(Level9 + pos);
      break;
    case 10:
      return pgm_read_byte_near(Level10 + pos);
      break;
  }
#else
  switch (level) {
    case 1:
      return Level1[pos];
      break;
    case 2:
      return Level2[pos];
      break;
    case 3:
      return Level3[pos];
      break;
    case 4:
      return Level4[pos];
      break;
    case 5:
      return Level5[pos];
      break;
    case 6:
      return Level6[pos];
      break;
    case 7:
      return Level7[pos];
      break;
    case 8:
      return Level8[pos];
      break;
    case 9:
      return Level9[pos];
      break;
    case 10:
      return Level10[pos];
      break;
  }
#endif
  return 0;
}

#endif
